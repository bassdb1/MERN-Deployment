{"version":3,"sources":["logo.svg","components/AllPets.js","components/Petdetails.js","components/Create.js","components/Edit.js","components/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["AllPets","useState","allPets","setallPets","deleteClicked","useEffect","axios","get","then","res","console","log","data","results","catch","err","className","map","pet","i","to","_id","name","type","description","src","petPic","height","width","alt","Petdetails","props","petinfo","setpetinfo","id","skill1","skill2","skill3","onClick","delete","navigate","Create","forminfo","setforminfo","errors","setErrors","changehandler","e","target","value","onSubmit","preventDefault","post","message","onChange","Edit","put","Index","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12688381.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","// 'useState' is used to create some variables that can store some data\r\nimport React, {useState, useEffect} from 'react';\r\n// We need to import 'axios' to reach the backend API\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router'\r\n\r\n\r\nconst AllPets = () => {\r\n    //state variable\r\n    const [allPets, setallPets] = useState([])\r\n    const [deleteClicked, setdeleteClicked] = useState(false)\r\n\r\n    //useEffect is used so that it will load the data only 'one time'\r\n\r\n    useEffect(()=>{\r\n        axios.get(\"http://localhost:8000/api/pets\")     // be sure to include full path, http://...\r\n    // Successful data from the URL above goes in '.then(res) 'res = response' variable'\r\n        .then(res =>{\r\n            console.log(\"*********\")\r\n            console.log(res)\r\n            console.log(\"*********\")\r\n        // I now want to set my data into my 'state variable' 'pets' via the 'setPets' setter\r\n        setallPets(res.data.results)\r\n        })\r\n    // Error data goes in '.catch()'\r\n        .catch(err =>{\r\n            console.log(err)\r\n\r\n        })\r\n\r\n    }, [deleteClicked])\r\n\r\n\r\n     // Click Handler - when the 'onclick' is clicked on below, it will run this function.  Get the delete route. Use backticks\r\n     const deleteClickHandler =(e, ID )=>{\r\n        axios.delete(`http://localhost:8000/api/pets/delete/${ID}`)\r\n        .then(res=>{\r\n            console.log(res)\r\n            setdeleteClicked(!deleteClicked)\r\n          \r\n        })\r\n\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n\r\n   // Return the Form to the Screen\r\n   return (\r\n   \r\n    \r\n    <div className = \"row\">\r\n        <div className=\"col\">\r\n        {      \r\n                // map through, loop. my 'allProducts state array' 'pet' = each object in the array, 'i' = index number\r\n                \r\n                allPets.map((pet,i)=>{\r\n\r\n                    // You have to have 'return' or it will not display\r\n                    return <div key= {i}className=\"card\">  \r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Name: <Link to ={`/pets/${pet._id}`} >{pet.name}</Link> </h4>\r\n                            <h6 className=\"card-title\">Type: {pet.type}</h6>\r\n                            <h6 className=\"card-title\">Description: {pet.description}</h6>\r\n                            <p><img src={pet.petPic} height =\"200px\" width =\"200px\" alt=\"\"/></p>\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\"></h6>\r\n                            <br></br>\r\n                            <Link to= \"/\">Home</Link>\r\n                        </div>\r\n                    </div>\r\n                \r\n                })\r\n        }\r\n        </div>\r\n        \r\n    </div>\r\n            \r\n)\r\n\r\n    };\r\n \r\n\r\nexport default AllPets;","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport { navigate, Link} from '@reach/router';\r\n\r\n// State Variable to hold our one pet detail\r\nconst Petdetails = (props) => {\r\n    const [petinfo, setpetinfo]= useState({})\r\n\r\n// UseEffect is used to run only one time\r\n\r\n    useEffect(()=>{\r\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)  // this is used to make our backend API call\r\n            .then(res=>{                                          // what we get back goes in the variable 'res' for response\r\n                console.log(res)\r\n                setpetinfo(res.data.results)                  // setting my 'State Variable' 'petinfo' with the response from my get command                   \r\n            })\r\n            .then(console.log(petinfo))\r\n            .catch(err=> console.log(err))\r\n    },[])\r\n\r\n    // Click Handler - when the 'onclick' is clicked on below, it will run this function.  Get the delete route. Use backticks\r\n    const deleteClickHandler =()=>{\r\n        axios.delete(`http://localhost:8000/api/pets/delete/${props.id}`)\r\n        .then(res=>{\r\n            console.log(res)\r\n            navigate(\"/\")\r\n        })\r\n\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <h1>Details about this Pet: {props.id} </h1> */}\r\n            <h1>Details about this Pet:</h1>\r\n            <p><img src={petinfo.petPic} height =\"400px\" width =\"400px\" alt=\"\"/></p>\r\n            \r\n            <h1>Name: {petinfo.name}</h1>\r\n            <h3>Type: {petinfo.type}</h3>\r\n            <h3>Description: {petinfo.description}</h3>\r\n            <h3>Skills: {petinfo.skill1} {petinfo.skill2} {petinfo.skill3} </h3>\r\n            <button onClick = {deleteClickHandler} className=\"btn-danger\">Adopt Me</button>\r\n            <Link to={`/pets/update/${props.id}`}><button  className=\"btn-warning\">Edit</button></Link>\r\n            <br></br>\r\n            <Link to= \"/\">Home</Link>\r\n         </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Petdetails;","import { navigate, Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport React, {useState} from 'react';\r\n\r\n// Create a 'State Variable' to hold your Data, also have 'keys', 'from my model' to match\r\nconst Create = () => {\r\n    const [forminfo, setforminfo] = useState({\r\n        name:\"\",\r\n        type:\"\",\r\n        description:\"\",\r\n        petPic:\"\"\r\n\r\n    })\r\n\r\n// Create a state variable for errors\r\n\r\nconst [errors, setErrors] = useState({})\r\n\r\n\r\n    // Change Handler - everything that is being typed in my form below goes through here\r\n    const changehandler = (e)=>{\r\n        setforminfo({\r\n            ...forminfo,                         // this is the spread operator, it keeps the current data from being overwritten\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n \r\n  // Submit Handler - when the form is 'submitted' I want it to run this 'Submit Handler' (e) = event\r\n    const submitHandler = (e)=>{\r\n\r\n        //prevent the page from refreshing\r\n        e.preventDefault()\r\n\r\n        // check to see if data is getting submitted\r\n        console.log(\"submitted\")\r\n\r\n        // Run Axios to 'Post' the data - I got this route from Postman, then what data, our data is stored in 'forminfo'\r\n        axios.post(\"http://localhost:8000/api/pets/create\", forminfo)\r\n            .then(res=>{\r\n                console.log(\"Response after posting the Form!\")\r\n                console.log(res)\r\n               \r\n                // If no errors - Validation\r\n                if(res.data.results){\r\n                    // Go back to home page\r\n                navigate(\"/\")\r\n                }\r\n                \r\n                // Put errors here\r\n                //seterrors(res.data.errors\r\n                else {setErrors(res.data)\r\n            }})\r\n            .catch(err=> console.log(\"Errors!\", err))\r\n    }\r\n\r\n    return (\r\n        <div className = \"container\">\r\n            <h1>Add a new Pet</h1>\r\n            <form onSubmit = {submitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label>Name: </label>\r\n                      {errors.name? <p className=\"text-danger\">{errors.name.message}</p> : \"\"}\r\n                    <input onChange={changehandler} type=\"text\" name=\"name\" id=\"\" className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n\r\n                <label>Type: </label>\r\n                {errors.type? <p className=\"text-danger\">{errors.type.message}</p> : \"\"}\r\n                \r\n                    <input onChange={changehandler} type=\"text\" name=\"type\" id=\"\" className=\"form-control\"/>\r\n                    {/* <textarea onChange={changehandler} name=\"punchline\" id=\"\" cols=\"30\" rows=\"10\" className=\"form-control\"></textarea> */}\r\n                </div>\r\n\r\n               \r\n                <div className=\"form-group\">\r\n                <label>Description: </label>\r\n                    {errors.description? <p className=\"text-danger\">{errors.description.message}</p> : \"\"}\r\n                    <input onChange={changehandler} type=\"text\" name=\"description\" id=\"\"className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Pet Picture: </label>\r\n                    {errors.petPic? <p className=\"text-danger\">{errors.petPic.message}</p> : \"\"}\r\n                    <input onChange={changehandler} type=\"text\" name=\"petPic\" id=\"\"className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Skill 1: </label>\r\n                    {/* {errors.petPic? <p className=\"text-danger\">{errors.petPic.skill1}</p> : \"\"} */}\r\n                    <input onChange={changehandler} type=\"text\" name=\"skill1\" id=\"\"className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Skill 2: </label>\r\n                    {/* {errors.petPic? <p className=\"text-danger\">{errors.petPic.skill2}</p> : \"\"} */}\r\n                    <input onChange={changehandler} type=\"text\" name=\"skill2\" id=\"\"className=\"form-control\"/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Skill 3: </label>\r\n                    {/* {errors.petPic? <p className=\"text-danger\">{errors.petPic.skill3}</p> : \"\"} */}\r\n                    <input onChange={changehandler} type=\"text\" name=\"skill3\" id=\"\"className=\"form-control\"/>\r\n                </div>\r\n\r\n                \r\n\r\n                <input type=\"submit\" value=\"Add Pet\"/>\r\n             </form>\r\n             <br></br>\r\n            <Link to= \"/\">Home</Link>\r\n               \r\n            \r\n\r\n        </div>\r\n\r\n\r\n    );  \r\n};\r\n\r\n\r\nexport default Create;","import React, {useEffect, useState} from 'react';  // useEffect to load the ASI page data.  useState to store data ina a state variable\r\nimport axios from 'axios';  // this lets us use API Endpoints\r\nimport {navigate, Link} from '@reach/router';  // this allows me to go to my home page\r\n\r\n// Props allows us to bring over properties\r\nconst Edit = (props) => {\r\n\r\n    // We want to populate this form with what we get from the database, and store in a state variable\r\n    const [petinfo, setpetinfo] = useState({\r\n\r\n    // I need to store my state variabels here - that will be modified.\r\n        name:\"\",\r\n        type:\"\",\r\n        description:\"\",\r\n        petPic:\"\"\r\n    })\r\n\r\n    // Create a state variable for errors\r\n\r\n    const [errors, setErrors] = useState({})\r\n\r\n    //useEffect - Loads only one time for data - if not it will load over and over\r\n    useEffect(()=>{\r\n       \r\n        // Using Axios to go get the data from the website, be sure to include backticks.  'id' was defined on app.js\r\n        axios.get(`http://localhost:8000/api/pets/${props.id}`)\r\n\r\n        // Whatever is returning from the axios call above is being stored here\r\n            .then(res=>{\r\n                console.log(res)\r\n        // Populate the State Variable\r\n            setpetinfo(res.data.results)\r\n            })   \r\n            .catch(err=>console.log(err))\r\n\r\n        },[])\r\n\r\n    // Submit Handler - needed to submit the edited form, 'e' = event\r\n    \r\n    const updateInfo = (e)=>{\r\n        // prevent the default from the page 'refreshing the page' on submit\r\n        e.preventDefault();\r\n        // I need to use 'Axios' to 'Put' My data in the database - look at my routes from Postman.  be sure to include backticks.\r\n        // .. With a put, what it needs updated (props.id), and what it needs updated with (petinfo)\r\n        axios.put(`http://localhost:8000/api/pets/update/${props.id}`, petinfo)\r\n       \r\n        // Whatever response we get back we can console.log it\r\n            .then(res=>{\r\n                console.log(res)\r\n\r\n               // I want it to Naviagte me back to my 'home page' with the data changed - I will need to import Naviagte\r\n               // If no errors - Validation\r\n               if(res.data.results){\r\n                // Go back to home page\r\n            navigate(\"/\")\r\n            }\r\n            \r\n            // Put errors here\r\n            //seterrors(res.data.errors\r\n            else {\r\n                console.log(res)\r\n\r\n                setErrors(res.data.errors)\r\n        }\r\n            })\r\n        // Any Errors\r\n            .catch(err=>console.log(err))\r\n \r\n    }\r\n\r\n    // On Change Handler - needed to change the data.  'e' is taking information about the 'event' - update our 'State Variables'\r\n    // ... Using 'setpetinfo' as a setter to modify 'petinfo;\r\n\r\n    const changehandler = (e)=>{\r\n        \r\n        setpetinfo({\r\n            // we need to 'preserve' what is in the data now with the 'spread operator'\r\n            ...petinfo,\r\n\r\n            [e.target.name]:e.target.value\r\n\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        // copy over the form from my create.js, and place between the 'div's.  'Returns data to the Webpage'\r\n        <div>\r\n            <h3>Edit Pet</h3>\r\n\r\n            {/* When I submit this form, I want this to run the 'Submit Handler' 'updateInfo' */}\r\n            <form onSubmit = {updateInfo}>\r\n                <div className=\"form-group\">\r\n                    <label>Name: </label>\r\n            {/* I also need to tell it we are using a change Handler to edit the data        */}\r\n                {errors.name? <p className=\"text-danger\">{errors.name.message}</p> : \"\"}\r\n\r\n                    <input onChange={changehandler} type=\"text\" name=\"name\" id=\"\" className=\"form-control\" value={petinfo.name}/>\r\n                    {/* <input onChange={changehandler} type=\"text\" name=\"name\" id=\"\" className=\"form-control\" /> */}\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n\r\n                <label>Type: </label>\r\n             {/* I also need to tell it we are using a change Handler to edit the data        */}\r\n                {errors.type? <p className=\"text-danger\">{errors.type.message}</p> : \"\"}\r\n                    <input onChange={changehandler} type=\"text\" name=\"type\" id=\"\" className=\"form-control\" value={petinfo.type}/>   \r\n                    {/* <input onChange={changehandler} type=\"text\" name=\"type\" id=\"\" className=\"form-control\"/>    */}\r\n\r\n\r\n                    {/* <textarea onChange={changehandler} name=\"type\" id=\"\" cols=\"30\" rows=\"10\" className=\"form-control\" value={petinfo.punchline}></textarea> */}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Description </label>\r\n                    {errors.description? <p className=\"text-danger\">{errors.description.message}</p> : \"\"}\r\n                    <input onChange={changehandler} type=\"text\" name=\"description\" id=\"\"className=\"form-control\" value ={petinfo.description}/>\r\n                    {/* <input onChange={changehandler} type=\"text\" name=\"description\" id=\"\"className=\"form-control\"/> */}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Pet Picture: </label>\r\n                    {errors.petPic? <p className=\"text-danger\">{errors.petPic.message}</p> : \"\"}\r\n                    <input onChange={changehandler} type=\"text\" name=\"petPic\" id=\"\"className=\"form-control\" value = {petinfo.petPic}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Skill 1: </label>\r\n                    {/* {errors.petPic? <p className=\"text-danger\">{errors.petPic.skill1}</p> : \"\"} */}\r\n                    <input onChange={changehandler} type=\"text\" name=\"skill1\" id=\"\"className=\"form-control\" value = {petinfo.skill1}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Skill 2: </label>\r\n                    {/* {errors.petPic? <p className=\"text-danger\">{errors.petPic.skill2}</p> : \"\"} */}\r\n                    <input onChange={changehandler} type=\"text\" name=\"skill2\" id=\"\"className=\"form-control\" value = {petinfo.skill2}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                <label>Skill 3: </label>\r\n                    {/* {errors.petPic? <p className=\"text-danger\">{errors.petPic.skill3}</p> : \"\"} */}\r\n                    <input onChange={changehandler} type=\"text\" name=\"skill3\" id=\"\"className=\"form-control\" value = {petinfo.skill3}/>\r\n                </div>\r\n\r\n                <input type=\"submit\" value=\"Update Pet\"/>\r\n             </form>\r\n\r\n             \r\n             <br></br>\r\n            <Link to= \"/\">Home</Link>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Edit;","import React from 'react';\r\nimport {Link} from '@reach/router';\r\n\r\n\r\n\r\n\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <img src =\"/adopt.jpg\" alt=\"\"/><br></br>\r\n            <Link to= \"/pets/create\">Add a Pet</Link><br></br>\r\n            <Link to= \"/pets/\">View Our Loveable Pets</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Index;","import logo from './logo.svg';\nimport './App.css';\n// we need to import to see it on our page\nimport AllPets from './components/AllPets';\nimport Petdetails from './components/Petdetails';\nimport {Router, Link} from \"@reach/router\";   // Link lets me change pages with out reloading\nimport Create from './components/Create';\nimport Edit from './components/Edit';\nimport Index from './components/index'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       {/* // this will show in all of the 'Front End routes */}\n      \n      {/* <h1>Pet Shelter</h1>\n      <Link to= \"/pets/new\">Add a Pet</Link> */}\n\n      {/* // AllPets.js file, using Pets' Method */}\n      {/* // Create.js file, using 'new' Method */}\n\n      <Router>\n        <AllPets path = \"/pets\"></AllPets>      \n        <Create path = \"/pets/create\"></Create>     \n        <Petdetails path= \"/pets/:id\"></Petdetails>\n        <Edit path=\"/pets/update/:id\"></Edit>\n        <Index path = \"/\"></Index>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}